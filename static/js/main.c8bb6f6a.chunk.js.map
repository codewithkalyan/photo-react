{"version":3,"sources":["components/Navbar.js","components/FormPhoto.js","components/PhotoDisplay.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","showBsFilterFilters","setShowBsFilterFilters","useState","showBsFilterLeftFilters","setShowBsFilterLeftFilters","allPhotosChecked","setAllPhotosChecked","dropdownRef","useRef","toggleFilters","icon","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","handleCheckboxChange","filter","handleFilterCheckboxChange","React","createElement","href","id","onClick","BsFilter","ref","className","type","checked","onChange","BsFilterLeft","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","getDatabase","FormPhoto","_ref","onClose","name","setName","imageUrl","setImageUrl","description","setDescription","formRef","e","htmlFor","value","handleSubmit","push","timestamp","serverTimestamp","handleCancel","PhotoDisplay","images","setImages","selectedImage","setSelectedImage","async","itemsRef","onValue","snapshot","itemsData","val","itemsArray","Object","keys","map","key","liked","fetchData","handleCloseModal","image","src","alt","FavoriteIcon","color","stopPropagation","updatedImages","updatedLiked","set","concat","handleLike","DeleteIcon","remove","handleDelete","Date","toLocaleDateString","year","month","day","App","showForm","setShowForm","toggleForm","FaCirclePlus","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.c8bb6f6a.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { BsFilterLeft, BsFilter } from 'react-icons/bs';\r\nimport './NavbarStyles.css';\r\n\r\nfunction Navbar() {\r\n    const [showBsFilterFilters, setShowBsFilterFilters] = useState(false);\r\n    const [showBsFilterLeftFilters, setShowBsFilterLeftFilters] = useState(false);\r\n    const [allPhotosChecked, setAllPhotosChecked] = useState(true);\r\n    const dropdownRef = useRef(null);\r\n\r\n    const toggleFilters = (icon) => {\r\n        if (icon === \"BsFilter\") {\r\n            setShowBsFilterFilters(true);\r\n            setShowBsFilterLeftFilters(false);\r\n        } else if (icon === \"BsFilterLeft\") {\r\n            setShowBsFilterFilters(false);\r\n            setShowBsFilterLeftFilters(true);\r\n        }\r\n    };\r\n\r\n    const handleClickOutside = (event) => {\r\n        if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n            setShowBsFilterFilters(false);\r\n            setShowBsFilterLeftFilters(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    const handleCheckboxChange = (filter) => {\r\n        if (filter === 'allPhotos') {\r\n            setAllPhotosChecked(true);\r\n        } else {\r\n            setAllPhotosChecked(false);\r\n        }\r\n    };\r\n\r\n    const handleFilterCheckboxChange = (filter) => {\r\n        if (filter !== 'allPhotos') {\r\n            setAllPhotosChecked(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <nav>\r\n            <a href=\"index.html\">Photo Gallery</a>\r\n            <div>\r\n                <ul id=\"navbar\">\r\n                    <li onClick={() => toggleFilters(\"BsFilter\")}>\r\n                        <BsFilter />\r\n                        {showBsFilterFilters && (\r\n                            <div ref={dropdownRef} className=\"filter-dropdown\">\r\n                                <label>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={allPhotosChecked}\r\n                                        onChange={() => handleCheckboxChange('allPhotos')}\r\n                                    /> All photos\r\n                                </label>\r\n                                <label>\r\n                                    <input type=\"checkbox\" onChange={() => handleFilterCheckboxChange('name')} /> Name\r\n                                </label>\r\n                                <label>\r\n                                    <input type=\"checkbox\" onChange={() => handleFilterCheckboxChange('timeLatestFirst')} /> Time Latest First\r\n                                </label>\r\n                                <label>\r\n                                    <input type=\"checkbox\" onChange={() => handleFilterCheckboxChange('timeLatestLast')} /> Time Latest Last\r\n                                </label>\r\n                            </div>\r\n                        )}\r\n                    </li>\r\n                    <li onClick={() => toggleFilters(\"BsFilterLeft\")}>\r\n                        <BsFilterLeft />\r\n                        {showBsFilterLeftFilters && (\r\n                            <div ref={dropdownRef} className=\"filter-dropdown\">\r\n                                <label>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={allPhotosChecked}\r\n                                        onChange={() => handleCheckboxChange('allPhotos')}\r\n                                    /> All photos\r\n                                </label>\r\n                                <label>\r\n                                    <input type=\"checkbox\" onChange={() => handleFilterCheckboxChange('name')} /> Name\r\n                                </label>\r\n                            </div>\r\n                        )}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getDatabase, ref, push, serverTimestamp } from 'firebase/database';\r\nimport './FormPhotoStyles.css'; // Import the CSS file for styling\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA2yfwL5s4ZSsYN7aiFc39Fnt8yE-MdCP0\",\r\n  authDomain: \"sampleone-kalyan.firebaseapp.com\",\r\n  \t   databaseURL: \"https://sampleone-kalyan-default-rtdb.asia-southeast1.firebasedatabase.app/\",\r\n  projectId: \"sampleone-kalyan\",\r\n  storageBucket: \"sampleone-kalyan.appspot.com\",\r\n  messagingSenderId: \"731094145622\",\r\n  appId: \"1:731094145622:web:ac8cd74373f780a85bf9f7\",\r\n  measurementId: \"G-XMX9QK7FKM\" \r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst database = getDatabase(app);\r\n\r\nconst FormPhoto = ({ onClose }) => {\r\n  const [name, setName] = useState('');\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const formRef = useRef(null);\r\n\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleImageUrlChange = (e) => {\r\n    setImageUrl(e.target.value);\r\n  };\r\n\r\n  const handleDescriptionChange = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    push(ref(database, 'items'), {\r\n      name: name,\r\n      imageUrl: imageUrl,\r\n      description: description,\r\n      timestamp: serverTimestamp()\r\n    });\r\n    setName('');\r\n    setImageUrl('');\r\n    setDescription('');\r\n    onClose();\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setName('');\r\n    setImageUrl('');\r\n    setDescription('');\r\n    onClose();\r\n  };\r\n\r\n  const handleClickOutside = (e) => {\r\n    if (formRef.current && !formRef.current.contains(e.target)) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={formRef} className=\"form-popup\">\r\n  <h2>Add Photo</h2>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"name\">Photographer Name:</label>\r\n    <input type=\"text\" id=\"name\" value={name} onChange={handleNameChange} />\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"imageUrl\">Image URL:</label>\r\n    <input type=\"text\" id=\"imageUrl\" value={imageUrl} onChange={handleImageUrlChange} />\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"description\">Description:</label>\r\n    <textarea id=\"description\" value={description} onChange={handleDescriptionChange} />\r\n  </div>\r\n  <div>\r\n    <button onClick={handleSubmit} className=\"submit-button\">Submit</button>\r\n    <button onClick={handleCancel} className=\"cancel-button\">Cancel</button>\r\n  </div>\r\n</div>\r\n\r\n  );\r\n};\r\n\r\nexport default FormPhoto;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getDatabase, ref, onValue, remove, set } from 'firebase/database';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport './PhotoDisplayStyles.css';\r\n\r\nconst PhotoDisplay = () => {\r\n  const [images, setImages] = useState([]);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const database = getDatabase();\r\n      const itemsRef = ref(database, 'items');\r\n      onValue(itemsRef, (snapshot) => {\r\n        const itemsData = snapshot.val();\r\n        if (itemsData) {\r\n          const itemsArray = Object.keys(itemsData).map(key => ({\r\n            id: key,\r\n            ...itemsData[key],\r\n            liked: false\r\n          }));\r\n          setImages(itemsArray);\r\n        } else {\r\n          setImages([]);\r\n        }\r\n      });\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleLike = (id) => {\r\n    const updatedImages = images.map(image => {\r\n      if (image.id === id) {\r\n        const updatedLiked = !image.liked;\r\n        const database = getDatabase();\r\n        set(ref(database, `items/${id}/liked`), updatedLiked);\r\n        return { ...image, liked: updatedLiked };\r\n      }\r\n      return image;\r\n    });\r\n\r\n    setImages(updatedImages);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    const database = getDatabase();\r\n    remove(ref(database, `items/${id}`));\r\n  };\r\n\r\n  const formatDate = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return date.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' });\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedImage(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"photo-container\">\r\n      {images.map(image => (\r\n        <div key={image.id} onClick={() => setSelectedImage(image)} className=\"photo-item\">\r\n          <img src={image.imageUrl} alt={image.name} />\r\n          <FavoriteIcon\r\n            color={image.liked ? 'secondary' : 'action'}\r\n            onClick={(e) => {e.stopPropagation(); handleLike(image.id)}}\r\n            className=\"icon like-icon\"\r\n          />\r\n          <DeleteIcon\r\n            onClick={(e) => {e.stopPropagation(); handleDelete(image.id)}}\r\n            className=\"icon delete-icon\"\r\n          />\r\n          <div className=\"info\">\r\n            <div>\r\n              <div>{image.description}</div>\r\n              <div>{formatDate(image.timestamp)}</div>\r\n            </div>\r\n            <div className=\"author\">~by {image.name}</div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      {selectedImage && (\r\n        <div className=\"modal\" onClick={handleCloseModal}>\r\n          <div className=\"modal-content\">\r\n            <img src={selectedImage.imageUrl} alt={selectedImage.name} />\r\n            <button onClick={handleCloseModal} className=\"close-btn\">X</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhotoDisplay;\r\n\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport FormPhoto from './components/FormPhoto';\nimport PhotoDisplay from './components/PhotoDisplay';\nimport { FaCirclePlus } from \"react-icons/fa6\";\n\nfunction App() {\n  const [showForm, setShowForm] = useState(false);\n\n  const toggleForm = () => {\n    setShowForm(!showForm);\n  };\n\n  return (\n    <div className=\"App\">\n      <div> <div id=\"plusSpace\">\n        <Navbar />\n        <div className=\"content\">\n          <PhotoDisplay />\n          {showForm && <div className=\"form-popup\"><FormPhoto onClose={() => setShowForm(false)} /></div>}\n        </div>\n      </div>\n      </div>\n      <div className=\"floating-button\">\n        <button onClick={toggleForm}><FaCirclePlus /></button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}